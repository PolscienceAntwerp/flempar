, plen_comm="comm"
, use_parallel=TRUE)
result %>%
tibble::tibble() %>%
head(5)
result %>%
tibble::tibble() %>%
select_if(!is.list())
is.list()
?is.list()
is.list(list())
result %>%
tibble::tibble() %>%
select_if(is.list())
result %>%
tibble::tibble() %>%
select_if(is.list(everything()))
result %>%
tibble::tibble() %>%
select_if(is.character())
result %>%
tibble::tibble() %>%
select_if(is.character)
result %>%
tibble::tibble() %>%
select_if(is.list)
result %>%
tibble::tibble() %>%
select_if(!is.list)
result %>%
tibble::tibble() %>%
select_if(is.list)
result %>%
tibble::tibble() %>%
select_if(!is.list)
?select_if
result %>%
tibble::tibble() %>%
select_if(not(is.list))
result %>%
tibble::tibble() %>%
select_if(purrr:Negate(is.list))
result %>%
tibble::tibble() %>%
select_if(purr:Negate(is.list))
result %>%
tibble::tibble() %>%
select_if(purrr::Negate(is.list))
result %>%
tibble::tibble() %>%
select_if(Negate(is.list))
result %>%
#   tibble::tibble() %>%
select_if(Negate(is.list))
result %>%
select_if(Negate(is.list)) %>%
write.csv2(,"result.csv",row.names=FALSE)
result %>%
select_if(Negate(is.list)) %>%
write.csv2("result.csv",row.names=FALSE)
mp_bio <- get_mp(selection="current",use_parallel=TRUE,fact="bio")
mp_bio
mp_bio <- get_mp(selection="current",use_parallel=TRUE,fact="bio", raw=TRUE)
?get_mp
mp_bio <- get_mp(selection="current",use_parallel=TRUE,fact="raw")
mp_bio
mp_bio %>%
select(id,email)
mp_bio %>%
select(id,email) %>%
tidyr::unnest_wider(email ,names_sep="_")
mp_bio
mp_bio %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id,voornaam, achternaam=naam,geslacht,geboortedatum,geboorteplaats,gsmnr,email,website) %>%
dplyr::mutate(geboortedatum = lubridate::date(lubridate::ymd_hms(geboortedatum))) %>%
tidyr::unnest_wider(email ,names_sep="_")
mp_bio %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id,voornaam, achternaam=naam,geslacht,geboortedatum,geboorteplaats,gsmnr,email,website) %>%
dplyr::mutate(geboortedatum = lubridate::date(lubridate::ymd_hms(geboortedatum))) %>%
tidyr::unnest_wider(email ,names_sep="_")  %>%
tidyr::unnest(website ,names_sep="_",keep_empty =TRUE) %>%
guarantee_field(c("website_soort","website_value"))
guarantee_field <- function(df, fields) {
add <-fields[!fields%in%names(df)]
if(length(add)!=0) df[add] <- NA
df
}
mp_bio %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id,voornaam, achternaam=naam,geslacht,geboortedatum,geboorteplaats,gsmnr,email,website) %>%
dplyr::mutate(geboortedatum = lubridate::date(lubridate::ymd_hms(geboortedatum))) %>%
tidyr::unnest_wider(email ,names_sep="_")  %>%
tidyr::unnest(website ,names_sep="_",keep_empty =TRUE)
mp_bio %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id,voornaam, achternaam=naam,geslacht,geboortedatum,geboorteplaats,gsmnr,email,website) %>%
dplyr::mutate(geboortedatum = lubridate::date(lubridate::ymd_hms(geboortedatum))) %>%
tidyr::unnest_wider(email ,names_sep="_")  %>%
tidyr::unnest(website ,names_sep="_",keep_empty =TRUE) %>%
guarantee_field(c("website_soort","website_value")) %>%
tidyr::pivot_wider(names_from = website_soort,values_from = website_value) %>%
dplyr::select(-`NA`)
mp_bio <- get_mp(selection="current",use_parallel=TRUE,fact="bio")
mp_bio
mp_bio <- get_mp(selection="current",use_parallel=TRUE,fact="raw")
mp_bio
mp_bio <- get_mp(selection="current",use_parallel=TRUE,fact="political_info")
mp_bio
result <- get_data(date_range_from="2022-02-20"
, date_range_to="2022-02-15"
, type="document"
, fact="written_questions"
, use_parallel=TRUE)
result <- get_data(date_range_from="2022-02-15"
, date_range_to="2022-02-20"
, type="document"
, fact="written_questions"
, use_parallel=TRUE)
result %>%
tibble::tibble()
result %>%
tibble::tibble() %>% View
result
result %>%
tibble::tibble()
result %>%
tibble::tibble() %>%
#mutate(vraag= ) %>%
mutate(antwoord= str_extract(text, "(?<=ANTWOORD op vraag nr. ).*") )
library(stringr)
result %>%
tibble::tibble() %>%
#mutate(vraag= ) %>%
mutate(antwoord= str_extract(text, "(?<=ANTWOORD op vraag nr. ).*") )
result %>%
tibble::tibble() %>%
#mutate(vraag= ) %>%
mutate(antwoord= str_extract(text, "(?<=ANTWOORD op ).*") )
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(?>=ANTWOORD op ).*")) %>%
mutate(antwoord= str_extract(text, "(?<=ANTWOORD op ).*") )
?str_extract
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "*.(?<=ANTWOORD op )"))
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, ".*(?<=ANTWOORD op )"))
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, ".*(?<=ANTWOORD op )")) %>%
mutate(antwoord= str_extract(text, "(?<=ANTWOORD op ).*") ) %>% View()
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, ".*(?<=ANTWOORD op )")) %>%
mutate(antwoord= str_extract(text, "(?<=ANTWOORD op ).*") ) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "^.*[a-z].*$"))
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "^.*[a-z].*$")) %>% View()
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "^.*[a-z].*$")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "^.*[a-z].*$")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(^|\.)[[:space:]A-Z]+\.")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(^|\\.)[[:space:]A-Z]+\\.")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(^|\.)[[:space:]A-Z]+\.")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(^|.)[[:space:]A-Z]+.")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(^|.)[[:space:]A-Z]+.")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "[[:space:]A-Z]+.")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "[[:space:]A-Z]+.")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(^|\\.)[[:space:]A-Z]+\\.")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(^|[.])[[:space:]A-Z]+[.]")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(?|\\.])[[:space:]A-Z]+[op]")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(\\?|\\.])[[:space:]A-Z]+[op]")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, ".*(?<=ANTWOORD op )")) %>%
mutate(antwoord= str_extract(text, "(?<=ANTWOORD op ).*") ) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "[[:space:]A-Z]+\op")) %>%  write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "[[:space:]A-Z]+\[op]")) %>%  write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "[[:space:]A-Z]+[op]")) %>%  write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "^([^a-z]+)\b(.*)")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "^([^a-z]+)\\b(.*)")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(?<=^|[.?!]\s)[^[:lower:].?!]+(?:[.?!]|$)")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, "(?<=^|[.?!]\\s)[^[:lower:].?!]+(?:[.?!]|$)")) %>% write.csv2("result.csv",row.names = FALSE)
result %>%
tibble::tibble() %>%
mutate(vraag= str_extract(text, ".*(?<=ANTWOORD op )")) %>%
mutate(antwoord= str_extract(text, "(?<=ANTWOORD op ).*") ) %>% write.csv2("result.csv",row.names = FALSE)
library(stringr)
result <- get_data(date_range_from="2022-02-15"
, date_range_to="2022-02-20"
, type="document"
, fact="written_questions"
, use_parallel=TRUE)
result %>%
mutate(vraag= str_extract(text, ".*(?<=ANTWOORD op )")) %>%
mutate(antwoord= str_extract(text, "(?<=ANTWOORD op ).*") ) %>%
write.csv2("result.csv",row.names = FALSE)
devtools::build_readme()
library(Flempar)
mp_work_doc <- get_data(date_range_from="2022-02-20"
, date_range_to="2022-03-31"
, type="document"
, fact="parliamentary_initiatives"
, plen_comm="plen"
, use_parallel=TRUE)
devtools::load_all()
mp_work_doc <- get_data(date_range_from="2022-02-20"
, date_range_to="2022-03-31"
, type="document"
, fact="parliamentary_initiatives"
, plen_comm="plen"
, use_parallel=TRUE)
mp_work_doc
library(dplyr)
library(GGally)
library(readr)
set.seed(123)
dataset <- read_csv2("https://storage.googleapis.com/public_dm/data.csv") %>%
select(-municipalities)
#Correlation matrix
ggcorr(dataset, method = c("everything", "pearson")
, size = 3
, layout.exp = 3)
dataset
View(dataset)
knitr::opts_chunk$set(echo = TRUE)
get_legislatures()
get_legislatures()
leg <- get_legislatures()
length(leg)
nrow(list)
list <- vector(mode=list, length=length(leg))
nrow(leg)
leg
leg %>%
arrange(start)
leg <- get_legislatures() %>%
arrange(start)
get_legislatures() %>%
filter(start > date(1995-06-12))
get_legislatures() %>%
filter(start > date("1995-06-12"))
ymd_hms("1995-06-12 22:00:00")
library(lubridate)
get_legislatures() %>%
filter(start >= ymd_hms("1995-06-12 22:00:00"))
leg <- get_legislatures() %>%
filter(start >= ymd_hms("1995-06-12 22:00:00"))
length(leg)
1:nrow(leg)
i <- 1
leg$naam
leg$start[[i]]
date(leg$start[[i]])
get_legislatures()
get_legislatures() %>%
filter(start >= ymd_hms("1995-06-12 22:00:00"))
get_legislatures() %>%
filter(start >= ymd_hms("1995-06-12 22:00:00"))
leg <- get_legislatures() %>%
filter(start >= ymd_hms("1995-06-12 22:00:00"))
list <- vector(mode=list, length=length(leg))
list <- vector(mode="list", length=length(leg))
library(lubridate)
leg <- get_legislatures() %>%
filter(start >= ymd_hms("1995-06-12 22:00:00"))
list <- vector(mode="list", length=length(leg))
for(i in 1:nrow(leg)){
list[[i]]<- get_mp(selection="date", fact="bio", date_at =date(leg$start[[i]]), use_parallel=TRUE) # date at moet anders (bv 1 dec ingeven)
}
result <- data.table::rbindlist(list)
result <- data.table::rbindlist(list,fill=TRUE)
result
mp_work_doc <- get_data(date_range_from="2022-02-20"
, date_range_to="2022-03-31"
, type="document"
, fact="parliamentary_initiatives"
, plen_comm="plen"
, use_parallel=TRUE)  #call lasted for approx. 30 minutes
devtools::load_all()
result <- get_data(date_range_from="2022-02-20"
, date_range_to="2022-03-31"
, type="document"
, fact="parliamentary_initiatives"
, plen_comm="plen")
devtools::load_all()
result <- get_data(date_range_from="2022-02-20"
, date_range_to="2022-03-31"
, type="document"
, fact="parliamentary_initiatives"
, plen_comm="plen")
devtools::load_all()
get_mp(fact="bio"
,selection="current"
,use_parallel=TRUE)
get_mp(fact="bio"
,selection="former"
,use_parallel=TRUE)
selection="current"
fact="bio"
date_at_conv <- Sys.Date() %>% format('%d%m%Y')
robj <- call_api_once(URL = "http://ws.vlpar.be/e/opendata/",
path = "/vv/op-datum",
query = list(datum=date_at_conv))
mainlist <- call_api_multiple_times(iterator=robj$items$volksvertegenwoordiger$id,
URL = "http://ws.vlpar.be/e/opendata/",
path = "/vv",
query = list(lang="nl"),
resultVector=NULL,
use_parallel=use_parallel)
}
use_parallel=TRUE
mainlist <- call_api_multiple_times(iterator=robj$items$volksvertegenwoordiger$id,
URL = "http://ws.vlpar.be/e/opendata/",
path = "/vv",
query = list(lang="nl"),
resultVector=NULL,
use_parallel=use_parallel)
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv)
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
tidyr::unnest_wider(huidigefractie)
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv)
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id,voornaam, achternaam=naam,geslacht,geboortedatum,geboorteplaats,gsmnr,email,website,huidigefractie) %>%
tidyr::unnest_wider(huidigefractie)
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id,voornaam, achternaam=naam,geslacht,geboortedatum,geboorteplaats,gsmnr,email,website,huidigefractie) %>%
tidyr::unnest_wider(huidigefractie) %>%
dplyr::select(voornaam, achternaam=naam,geslacht,geboortedatum,geboorteplaats,gsmnr,email,website,party_id=id,party_naam = naam)
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id,voornaam, achternaam=naam,geslacht,geboortedatum,geboorteplaats,gsmnr,email,website,huidigefractie) %>%
tidyr::unnest_wider(huidigefractie) %>%
dplyr::select(voornaam, achternaam=naam,geslacht,geboortedatum,geboorteplaats,gsmnr,email,website,party_id=id,party_naam = naam) %>%
dplyr::mutate(geboortedatum = lubridate::date(lubridate::ymd_hms(geboortedatum))) %>%
tidyr::unnest_wider(email ,names_sep="_")  %>%
tidyr::unnest(website ,names_sep="_",keep_empty =TRUE) %>%
guarantee_field(c("website_soort","website_value")) %>%
tidyr::pivot_wider(names_from = website_soort,values_from = website_value) %>%
dplyr::select(-`NA`)
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv)
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id
,voornaam,naam
,huidigefractie
,mandaat_vl=`mandaat-vlaams-parlement`
,mandaat_vl_andere=`mandaat-vlaams-parlement-andere`
,mandaat_andere=`mandaat-andere`
,kieskring
,deelstaatsenator
,lidmaatschap)
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id
,voornaam,naam
,huidigefractie
,mandaat_vl=`mandaat-vlaams-parlement`
,mandaat_vl_andere=`mandaat-vlaams-parlement-andere`
,mandaat_andere=`mandaat-andere`
,kieskring
,deelstaatsenator
,lidmaatschap) %>%
tidyr::unnest_wider(mandaat_andere, names_sep = "_")
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id
,voornaam,naam
,huidigefractie
,mandaat_vl=`mandaat-vlaams-parlement`
,mandaat_vl_andere=`mandaat-vlaams-parlement-andere`
,mandaat_andere=`mandaat-andere`
,kieskring
,deelstaatsenator
,lidmaatschap) %>%
tidyr::unnest_wider(mandaat_andere, names_sep = "_") %>% View
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id
,voornaam,naam
,huidigefractie
,mandaat_vl=`mandaat-vlaams-parlement`
,mandaat_vl_andere=`mandaat-vlaams-parlement-andere`
,mandaat_andere=`mandaat-andere`
,kieskring
,deelstaatsenator
,lidmaatschap) %>%
tidyr::unnest_wider(mandaat_andere, names_sep = "_") %>% View
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id
,voornaam,naam
,huidigefractie
,mandaat_vl=`mandaat-vlaams-parlement`
,mandaat_vl_andere=`mandaat-vlaams-parlement-andere`
,mandaat_andere=`mandaat-andere`
,kieskring
,deelstaatsenator
,lidmaatschap) %>%
tidyr::unnest_wider(mandaat_andere, names_sep = "_") %>%
tidyr::unnest_wider(lidmaatschap, names_sep = "_") %>%
tidyr::unnest_wider(huidigefractie, names_sep = "_")
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id
,voornaam,naam
,huidigefractie
,mandaat_vl=`mandaat-vlaams-parlement`
,mandaat_vl_andere=`mandaat-vlaams-parlement-andere`
,mandaat_andere=`mandaat-andere`
,kieskring
,deelstaatsenator
,lidmaatschap) %>%
tidyr::unnest_wider(lidmaatschap, names_sep = "_") %>%
tidyr::unnest_wider(huidigefractie, names_sep = "_")
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id
,voornaam,naam
,huidigefractie
,mandaat_vl=`mandaat-vlaams-parlement`
,mandaat_vl_andere=`mandaat-vlaams-parlement-andere`
,mandaat_andere=`mandaat-andere`
,kieskring
,deelstaatsenator
,lidmaatschap) %>%
tidyr::unnest_wider(lidmaatschap, names_sep = "_") %>% names
mainlist %>%
tibble::tibble(vv = .) %>%
tidyr::unnest_wider(vv) %>%
dplyr::select(id_mp=id
,voornaam,naam
,huidigefractie
,mandaat_vl=`mandaat-vlaams-parlement`
,mandaat_vl_andere=`mandaat-vlaams-parlement-andere`
,mandaat_andere=`mandaat-andere`
,kieskring
,deelstaatsenator
,lidmaatschap) %>%
tidyr::unnest_wider(lidmaatschap, names_sep = "_") %>%
tidyr::unnest_wider(huidigefractie, names_sep = "_") -> result
View(result)
